#!/bin/bash

export EDITOR=vi

_misc(){
    alias grpe="grep"
    alias gpre="grep"
    alias ap="ansible-playbook"
}

_docker(){
    if type docker-compose >/dev/null 2>&1; then
        alias dc="docker-compose"
    fi
}

_aws(){
    export PATH="${PATH}:${HOME}/.krew/bin"
    export AWS_ACCESS_KEY_ID=$( grep aws_access_key_id ~/.aws/credentials  | sed -e "s/aws_access_key_id = //" )
    export AWS_SECRET_ACCESS_KEY=$( grep aws_secret_access_key ~/.aws/credentials  | sed -e "s/aws_secret_access_key = //" )
    export AWS_REGION_CODE=$( grep region ~/.aws/config  | sed -e "s/region = //" )

    if type eksctl >/dev/null 2>&1; then
        complete -C  $( type -p aws_completer ) aws
        . <( eksctl completion  bash  )

        alias ec="eksctl"
         . <( eksctl completion  bash | sed -e 's/eksctl/ec/g' )
    fi
}

_kubernetes(){

    if type kubectl >/dev/null 2>&1; then
        . <( kubectl completion bash )

        alias kc="kubectl"
        complete -o default -F __start_kubectl kc

        alias kx="kubectx"
        alias kn="kubens"
    fi

    if type kind >/dev/null 2>&1; then
        . <(kind completion bash )
    fi
}
_openshift(){
    if type oc >/dev/null 2>&1; then
        . <(oc completion bash)
    fi
}
_azure(){
    export PATH=$PATH:~/bin
    source ~/lib/azure-cli/az.completion
}

_powerline() {
    function _update_ps1() {
        PS1="$(~/.local/bin/powerline-go -error $? -jobs $(jobs -p | wc -l) $PL_OPTS)"

        # Uncomment the following line to automatically clear errors after showing
        # them once. This not only clears the error for powerline-go, but also for
        # everything else you run in that shell. Don't enable this if you're not
        # sure this is what you want.

        set "?"
    }

    if [ "$TERM" != "linux" ] && [ -f ~/.local/bin/powerline-go ]; then
        PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
    fi
    PL_OPTS="-modules venv,user,host,cwd,git,root -theme gruvbox"
}
